version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-parts_db}
      - POSTGRES_USER=${POSTGRES_USER:-parts_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-parts_password}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-parts_user} -d ${POSTGRES_DB:-parts_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    image: ghcr.io/apesofwrath/pyparts:latest
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 --workers 4 --timeout 120 --access-logfile - --error-logfile - parts.wsgi:application"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - G_CLIENT_ID=${G_CLIENT_ID}
      - G_SECRET=${G_SECRET}
      - SLACK_TOKEN=${SLACK_TOKEN}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
  media_volume:
